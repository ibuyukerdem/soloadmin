# Generated by Django 5.1.3 on 2024-12-01 12:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(default='Şüpheli davranış', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='İşletim Sistemi Adı')),
                ('version', models.CharField(blank=True, max_length=50, null=True, verbose_name='Versiyon')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'S-İşletim Sistemi',
                'verbose_name_plural': 'S-İşletim Sistemleri',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ürün adını belirtiniz.', max_length=255, unique=True, verbose_name='Ürün Adı')),
                ('description', models.TextField(blank=True, help_text='Ürün ile ilgili açıklama.', null=True, verbose_name='Ürün Açıklaması')),
                ('serviceDuration', models.PositiveIntegerField(help_text='Hizmet süresi ay cinsinden belirtilmelidir.', verbose_name='Hizmet Süresi (Ay)')),
                ('price', models.DecimalField(decimal_places=2, help_text='Ürün fiyatını belirtiniz.', max_digits=10, verbose_name='Ürün Fiyatı')),
                ('isActive', models.BooleanField(default=True, help_text='Ürünün aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Ürün',
                'verbose_name_plural': 'Ürünler',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefon Numarası')),
                ('mobilePhone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Mobil Telefon')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('postalCode', models.CharField(blank=True, max_length=20, null=True, verbose_name='Posta Kodu')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Şehir')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='İlçe')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ülke')),
                ('dateOfBirth', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('profilePicture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Profil Resmi')),
                ('isIndividual', models.BooleanField(default=True, verbose_name='Kurumsal Fatura İstiyorum')),
                ('identificationNumber', models.CharField(blank=True, max_length=20, null=True, verbose_name='TC Kimlik/Vergi Numarası')),
                ('taxOffice', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vergi Dairesi')),
                ('isEfatura', models.BooleanField(default=False, verbose_name='e-Fatura Mükellefi')),
                ('secretQuestion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Gizli Soru')),
                ('secretAnswer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Gizli Cevap')),
                ('smsPermission', models.BooleanField(default=False, verbose_name='SMS İzni')),
                ('digitalMarketingPermission', models.BooleanField(default=False, verbose_name='Dijital Pazarlama İzni')),
                ('kvkkPermission', models.BooleanField(default=False, verbose_name='KVKK İzni')),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_groups', to='auth.group', verbose_name='Gruplar')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.site', verbose_name='Site')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_permissions', to='auth.permission', verbose_name='Kullanıcı İzinleri')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MailServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain')),
                ('ns1', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS1')),
                ('ns2', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS2')),
                ('ipAddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 1')),
                ('ipAddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 2')),
                ('ipAddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 3')),
                ('ipAddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 4')),
                ('ipAddress5', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 5')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şifre')),
                ('paymentType', models.CharField(choices=[('Monthly', 'Aylık'), ('Yearly', 'Yıllık')], default='Monthly', max_length=10, verbose_name='Ödeme Tipi')),
                ('priceUsd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret (USD)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('isActive', models.BooleanField(default=True, help_text='Sunucunun aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu sunucunun varsayılan olup olmadığını belirtir.', verbose_name='Varsayılan')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('operatingSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.operatingsystem', verbose_name='İşletim Sistemi')),
            ],
            options={
                'verbose_name': 'S-Mail Sunucusu',
                'verbose_name_plural': 'S-Mail Sunucuları',
            },
        ),
        migrations.CreateModel(
            name='DnsServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain')),
                ('ns1', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS1')),
                ('ns2', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS2')),
                ('ipAddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 1')),
                ('ipAddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 2')),
                ('ipAddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 3')),
                ('ipAddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 4')),
                ('ipAddress5', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 5')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şifre')),
                ('paymentType', models.CharField(choices=[('Monthly', 'Aylık'), ('Yearly', 'Yıllık')], default='Monthly', max_length=10, verbose_name='Ödeme Tipi')),
                ('priceUsd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret (USD)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('isActive', models.BooleanField(default=True, help_text='Sunucunun aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu sunucunun varsayılan olup olmadığını belirtir.', verbose_name='Varsayılan')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('operatingSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.operatingsystem', verbose_name='İşletim Sistemi')),
            ],
            options={
                'verbose_name': 'S-DNS Sunucusu',
                'verbose_name_plural': 'S-DNS Sunucuları',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Modül Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Modül Açıklaması')),
                ('serviceDuration', models.PositiveIntegerField(help_text='Hizmet süresi ay cinsinden belirtilmelidir.', verbose_name='Hizmet Süresi (Ay)')),
                ('price', models.DecimalField(decimal_places=2, help_text='Modül fiyatını belirtiniz.', max_digits=10, verbose_name='Fiyat')),
                ('isActive', models.BooleanField(default=True, help_text='Modülün aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('product', models.ForeignKey(blank=True, help_text='Bu modüle ait bir ürün seçin (isteğe bağlı).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modules', to='soloaccounting.product', verbose_name='Ürün')),
            ],
            options={
                'verbose_name': 'Modül',
                'verbose_name_plural': 'Modüller',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Hizmetin adını belirtiniz.', max_length=255, verbose_name='Hizmet Adı')),
                ('description', models.TextField(blank=True, help_text='Hizmet ile ilgili açıklama.', null=True, verbose_name='Hizmet Açıklaması')),
                ('serviceDuration', models.PositiveIntegerField(help_text='Hizmet süresi ay cinsinden belirtilmelidir.', verbose_name='Hizmet Süresi (Ay)')),
                ('price', models.DecimalField(decimal_places=2, help_text='Hizmet fiyatını belirtiniz.', max_digits=10, verbose_name='Hizmet Fiyatı')),
                ('isActive', models.BooleanField(default=True, help_text='Hizmetin aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('product', models.ForeignKey(blank=True, help_text='Bu hizmete ait bir ürün seçin (isteğe bağlı).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='soloaccounting.product', verbose_name='Ürün')),
            ],
            options={
                'verbose_name': 'Hizmet',
                'verbose_name_plural': 'Hizmetler',
            },
        ),
        migrations.CreateModel(
            name='SiteUrun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='module', to='sites.site', verbose_name='Site')),
                ('urun', models.ManyToManyField(related_name='siteUrun', to='soloaccounting.product', verbose_name='Ürünler')),
            ],
            options={
                'verbose_name': 'Site Ürün Eşleşmesi',
                'verbose_name_plural': 'Site Ürün Eşleşmeleri',
            },
        ),
        migrations.CreateModel(
            name='SqlServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain')),
                ('ns1', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS1')),
                ('ns2', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS2')),
                ('ipAddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 1')),
                ('ipAddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 2')),
                ('ipAddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 3')),
                ('ipAddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 4')),
                ('ipAddress5', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 5')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şifre')),
                ('paymentType', models.CharField(choices=[('Monthly', 'Aylık'), ('Yearly', 'Yıllık')], default='Monthly', max_length=10, verbose_name='Ödeme Tipi')),
                ('priceUsd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret (USD)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('isActive', models.BooleanField(default=True, help_text='Sunucunun aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu sunucunun varsayılan olup olmadığını belirtir.', verbose_name='Varsayılan')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('operatingSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.operatingsystem', verbose_name='İşletim Sistemi')),
            ],
            options={
                'verbose_name': 'S-SQL Sunucusu',
                'verbose_name_plural': 'S-SQL Sunucuları',
            },
        ),
        migrations.CreateModel(
            name='UserSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userSites', to='sites.site', verbose_name='Site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userSites', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı-Site İlişkisi',
                'verbose_name_plural': 'Kullanıcı-Site İlişkileri',
            },
        ),
        migrations.CreateModel(
            name='WebServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain')),
                ('ns1', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS1')),
                ('ns2', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS2')),
                ('ipAddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 1')),
                ('ipAddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 2')),
                ('ipAddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 3')),
                ('ipAddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 4')),
                ('ipAddress5', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 5')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şifre')),
                ('paymentType', models.CharField(choices=[('Monthly', 'Aylık'), ('Yearly', 'Yıllık')], default='Monthly', max_length=10, verbose_name='Ödeme Tipi')),
                ('priceUsd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret (USD)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('isActive', models.BooleanField(default=True, help_text='Sunucunun aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu sunucunun varsayılan olup olmadığını belirtir.', verbose_name='Varsayılan')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('operatingSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.operatingsystem', verbose_name='İşletim Sistemi')),
            ],
            options={
                'verbose_name': 'S-Web Sunucusu',
                'verbose_name_plural': 'S-Web Sunucuları',
            },
        ),
        migrations.CreateModel(
            name='CustomSiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='sites.site', verbose_name='Site')),
                ('dnsServer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dnsserver_configurations', to='soloaccounting.dnsserver', verbose_name='DNS Server')),
                ('mailServer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mailserver_configurations', to='soloaccounting.mailserver', verbose_name='Mail Server')),
                ('sqlServer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sqlserver_configurations', to='soloaccounting.sqlserver', verbose_name='SQL Server')),
                ('webServer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webserver_configurations', to='soloaccounting.webserver', verbose_name='Web Server')),
            ],
            options={
                'verbose_name': 'Site Konfigürasyonu',
                'verbose_name_plural': 'Site Konfigürasyonları',
            },
        ),
    ]
