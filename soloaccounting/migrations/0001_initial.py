# Generated by Django 5.1.3 on 2024-12-20 23:36

import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
import soloaccounting.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Aksiyon Kodu')),
                ('name', models.CharField(max_length=100, verbose_name='Aksiyon Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Aksiyon Açıklaması')),
            ],
            options={
                'verbose_name': 'Aksiyon Tipi',
                'verbose_name_plural': 'Aksiyon Tipleri',
            },
        ),
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(default='Şüpheli davranış', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Kampanya Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Kampanya Açıklaması')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Bitiş Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Kampanya',
                'verbose_name_plural': 'Kampanyalar',
            },
        ),
        migrations.CreateModel(
            name='ConditionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Koşul Kodu')),
                ('name', models.CharField(max_length=100, verbose_name='Koşul Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Koşul Açıklaması')),
            ],
            options={
                'verbose_name': 'Koşul Tipi',
                'verbose_name_plural': 'Koşul Tipleri',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Kupon Kodu')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('discount_type', models.CharField(choices=[('percent', 'Yüzde'), ('fixed', 'Sabit')], max_length=20, verbose_name='İndirim Tipi')),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='İndirim Değeri')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Bitiş Tarihi')),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True, verbose_name='Kullanım Limiti')),
                ('used_count', models.PositiveIntegerField(default=0, verbose_name='Kullanım Sayısı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Kupon',
                'verbose_name_plural': 'Kuponlar',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text="ISO kodu veya kısaltma. Örn: 'USD', 'EUR', 'TRY'.", max_length=10, unique=True, verbose_name='Para Birimi Kodu')),
                ('name', models.CharField(help_text="Para biriminin tam adı. Örn: 'ABD Doları', 'Avro', 'Türk Lirası'.", max_length=100, verbose_name='Para Birimi Adı')),
                ('exchange_rate', models.DecimalField(decimal_places=6, help_text='Varsayılan para birimine (örn. TL) göre 1 birimin kaç TL olduğunu belirtin. Örn: 1 USD = 20.000000 TL', max_digits=12, verbose_name='Dönüşüm Oranı')),
                ('is_default', models.BooleanField(default=False, help_text='Eğer işaretlerseniz, sistemdeki varsayılan para birimi bu olacaktır.', verbose_name='Varsayılan Para Birimi')),
            ],
            options={
                'verbose_name': 'Para Birimi',
                'verbose_name_plural': 'Para Birimleri',
            },
        ),
        migrations.CreateModel(
            name='DealerSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Bayi Segmenti Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Bayi Segmenti Açıklaması')),
            ],
            options={
                'verbose_name': 'Bayi Segmenti',
                'verbose_name_plural': 'Bayi Segmentleri',
            },
        ),
        migrations.CreateModel(
            name='UserSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Segment Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Segment Açıklaması')),
            ],
            options={
                'verbose_name': 'Kullanıcı Segmenti',
                'verbose_name_plural': 'Kullanıcı Segmentleri',
            },
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('params', models.JSONField(blank=True, default=dict, verbose_name='Aksiyon Parametreleri')),
                ('action_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='actions', to='soloaccounting.actiontype', verbose_name='Aksiyon Tipi')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='soloaccounting.campaign', verbose_name='Kampanya')),
            ],
            options={
                'verbose_name': 'Aksiyon',
                'verbose_name_plural': 'Aksiyonlar',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('applied_campaigns', models.ManyToManyField(blank=True, help_text='Bu sepete hangi kampanyaların uygulandığını göstermek için kullanılır. Kampanya indirimleri hesaplanırken bu alan referans alınabilir.', to='soloaccounting.campaign', verbose_name='Uygulanan Kampanyalar')),
                ('user', models.ForeignKey(blank=True, help_text='Sepet sahibi kullanıcı. Anonim sepet için boş bırakılabilir.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
                ('coupon', models.ForeignKey(blank=True, help_text='Bu sepete bir kupon kodu uygulandıysa buradan seçilir.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.coupon', verbose_name='Uygulanan Kupon')),
                ('currency', models.ForeignKey(blank=True, help_text='Sepetin para birimini belirtin. Ürünler farklı para biriminde olabilir, ancak hesaplamaları tek bir para biriminde yapmak için bu alan kullanılır.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Sepet Para Birimi')),
            ],
            options={
                'verbose_name': 'Sepet',
                'verbose_name_plural': 'Sepetler',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Kategori adını belirtiniz. Örneğin: 'Web Geliştirme', 'E-Ticaret', 'Finans', vb.", max_length=255, unique=True, verbose_name='Kategori Adı')),
                ('slug', models.SlugField(blank=True, help_text="Kategorinin URL'de kullanılacak kısa adı. Otomatik oluşturulur.", max_length=255, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, help_text='Kategori ile ilgili açıklama.', null=True, verbose_name='Kategori Açıklaması')),
                ('parent', models.ForeignKey(blank=True, help_text='Bu kategorinin bir üst kategorisi varsa seçiniz. Boş bırakılırsa ana kategori olur.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='soloaccounting.category', verbose_name='Üst Kategori')),
            ],
            options={
                'verbose_name': 'Kategori',
                'verbose_name_plural': 'Kategoriler',
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='currency',
            field=models.ForeignKey(blank=True, default=None, help_text="Bu kuponun indirim değerinin hangi para biriminde olduğunu belirtin. Örneğin 'EUR', 'USD', 'TRY'.", null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Para Birimi'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='currency',
            field=models.ForeignKey(blank=True, default=None, help_text='Kampanya içindeki indirimlerin, hedeflerin veya tutarların hangi para biriminde tanımlandığını belirtin.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Para Birimi'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='dealer_segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.dealersegment', verbose_name='Bayi Segmenti'),
        ),
        migrations.CreateModel(
            name='DealerTargetCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Hedef Kampanya Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Bitiş Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('currency', models.ForeignKey(blank=True, default=None, help_text='Bu hedef kampanyasındaki satış tutarları ve krediler için hangi para biriminin geçerli olduğunu belirtin.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Para Birimi')),
            ],
            options={
                'verbose_name': 'Bayi Hedef Kampanyası',
                'verbose_name_plural': 'Bayi Hedef Kampanyaları',
            },
        ),
        migrations.CreateModel(
            name='DealerTargetAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('params', models.JSONField(blank=True, default=dict, verbose_name='Ek Parametreler')),
                ('dealer', models.ForeignKey(limit_choices_to={'isDealer': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Bayi')),
                ('target_campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soloaccounting.dealertargetcampaign', verbose_name='Hedef Kampanyası')),
            ],
            options={
                'verbose_name': 'Bayi Hedef Atama',
                'verbose_name_plural': 'Bayi Hedef Atamaları',
            },
        ),
        migrations.CreateModel(
            name='DealerTargetThreshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_sales_amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Minimum Satış Tutarı')),
                ('credit_reward', models.PositiveIntegerField(verbose_name='Kredi Ödülü')),
                ('currency', models.ForeignKey(blank=True, default=None, help_text='Bu barem için belirlenen tutarın para birimini belirtin. Boş bırakılırsa hedef kampanyanın para birimi kullanılır.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Para Birimi')),
                ('target_campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thresholds', to='soloaccounting.dealertargetcampaign', verbose_name='Hedef Kampanyası')),
            ],
            options={
                'verbose_name': 'Bayi Hedef Barem',
                'verbose_name_plural': 'Bayi Hedef Baremleri',
                'ordering': ['min_sales_amount'],
            },
        ),
        migrations.CreateModel(
            name='ExtendedSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Kayıt oluşturulma tarihi otomatik olarak eklenir.', verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, help_text='Son güncellenme tarihi otomatik olarak eklenir.', verbose_name='Güncellenme Tarihi')),
                ('isActive', models.BooleanField(default=True, help_text='Bu site aktif mi? Aktif olmayan siteler listelerde gösterilmez.', verbose_name='Aktif')),
                ('isOurSite', models.BooleanField(default=False, help_text='Bu site bizim tarafımızdan kontrol ediliyorsa işaretleyin.', verbose_name='Bizim Sitemiz')),
                ('showPopupAd', models.BooleanField(default=False, help_text='Bu sitede pop-up reklam göstermek istiyorsanız işaretleyin.', verbose_name='Pop-up Reklam Gösterimi')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu site varsayılan olarak seçilsin mi?', verbose_name='Varsayılan Site')),
                ('logo', models.ImageField(default='logos/default_logo.webp', help_text='Site için bir logo yükleyin. Görüntü otomatik olarak 48x48 piksel ve kare formatına uygun hale getirilir.', upload_to=soloaccounting.models.logo_upload_path, verbose_name='Site Logosu')),
                ('site', models.OneToOneField(help_text='Bağlı olduğu siteyi seçin.', on_delete=django.db.models.deletion.CASCADE, related_name='extended_site', to='sites.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Genişletilmiş Site',
                'verbose_name_plural': 'Genişletilmiş Siteler',
            },
        ),
        migrations.CreateModel(
            name='InvoiceAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=False, help_text='Bu adresi varsayılan fatura adresi olarak işaretleyin.', verbose_name='Varsayılan Adres')),
                ('company_name', models.CharField(blank=True, help_text='Kurumsal fatura için firma adı. Bireysel kullanımdaysa boş bırakın.', max_length=255, null=True, verbose_name='Firma Adı')),
                ('full_name', models.CharField(blank=True, help_text='Bireysel fatura için alıcının tam adı.', max_length=255, null=True, verbose_name='Ad Soyad')),
                ('address_line1', models.CharField(help_text='Sokak, mahalle vb.', max_length=255, verbose_name='Adres Satırı 1')),
                ('address_line2', models.CharField(blank=True, help_text='Apartman, daire no vb. Ek adres bilgileri.', max_length=255, null=True, verbose_name='Adres Satırı 2')),
                ('city', models.CharField(max_length=100, verbose_name='Şehir')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='İlçe')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Posta Kodu')),
                ('country', models.CharField(help_text='Örn: Türkiye, Germany, France vb.', max_length=100, verbose_name='Ülke')),
                ('taxOffice', models.CharField(blank=True, help_text='Türkiye için vergi dairesi, Avrupa ülkeleri için ilgili vergi ofisi', max_length=100, null=True, verbose_name='Vergi Dairesi')),
                ('identificationNumber', models.CharField(blank=True, help_text='Bireysel için TC Kimlik no veya yabancı kimlik no, kurumsal için VKN veya Avrupa için VAT Number', max_length=50, null=True, verbose_name='Kimlik/Şirket Numarası')),
                ('is_efatura', models.BooleanField(default=False, help_text='Bu adres e-fatura kesimine uygun mu?', verbose_name='E-Fatura Mükellefi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('user', models.ForeignKey(help_text='Bu fatura adresi hangi kullanıcıya ait?', on_delete=django.db.models.deletion.CASCADE, related_name='invoice_addresses', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Fatura Adresi',
                'verbose_name_plural': 'Fatura Adresleri',
            },
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Oluşturulma tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, help_text='Son güncelleme tarihi')),
                ('name', models.CharField(max_length=100, verbose_name='İşletim Sistemi Adı')),
                ('version', models.CharField(blank=True, max_length=50, null=True, verbose_name='Versiyon')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('site', models.ForeignKey(help_text='Bu kaydın ait olduğu siteyi belirtir.', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='sites.site')),
            ],
            options={
                'verbose_name': 'S-İşletim Sistemi',
                'verbose_name_plural': 'S-İşletim Sistemleri',
            },
        ),
        migrations.CreateModel(
            name='MailServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Oluşturulma tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, help_text='Son güncelleme tarihi')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain')),
                ('ns1', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS1')),
                ('ns2', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS2')),
                ('ipAddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 1')),
                ('ipAddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 2')),
                ('ipAddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 3')),
                ('ipAddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 4')),
                ('ipAddress5', models.GenericIPAddressField(blank=True, null=True, verbose_name='Mail Sunucusu IP 5')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şifre')),
                ('paymentType', models.CharField(choices=[('Monthly', 'Aylık'), ('Yearly', 'Yıllık')], default='Monthly', max_length=10, verbose_name='Ödeme Tipi')),
                ('priceUsd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret (USD)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('isActive', models.BooleanField(default=True, help_text='Sunucunun aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu sunucunun varsayılan olup olmadığını belirtir.', verbose_name='Varsayılan')),
                ('site', models.ForeignKey(help_text='Bu kaydın ait olduğu siteyi belirtir.', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='sites.site')),
                ('operatingSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.operatingsystem', verbose_name='İşletim Sistemi')),
            ],
            options={
                'verbose_name': 'S-Mail Sunucusu',
                'verbose_name_plural': 'S-Mail Sunucuları',
            },
        ),
        migrations.CreateModel(
            name='DnsServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Oluşturulma tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, help_text='Son güncelleme tarihi')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain')),
                ('ns1', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS1')),
                ('ns2', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS2')),
                ('ipAddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 1')),
                ('ipAddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 2')),
                ('ipAddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 3')),
                ('ipAddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 4')),
                ('ipAddress5', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS Sunucusu IP 5')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şifre')),
                ('paymentType', models.CharField(choices=[('Monthly', 'Aylık'), ('Yearly', 'Yıllık')], default='Monthly', max_length=10, verbose_name='Ödeme Tipi')),
                ('priceUsd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret (USD)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('isActive', models.BooleanField(default=True, help_text='Sunucunun aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu sunucunun varsayılan olup olmadığını belirtir.', verbose_name='Varsayılan')),
                ('site', models.ForeignKey(help_text='Bu kaydın ait olduğu siteyi belirtir.', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='sites.site')),
                ('operatingSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.operatingsystem', verbose_name='İşletim Sistemi')),
            ],
            options={
                'verbose_name': 'S-DNS Sunucusu',
                'verbose_name_plural': 'S-DNS Sunucuları',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Siparişe özel benzersiz numara. Müşteriye gösterilir ve destek taleplerinde kullanılır.', max_length=100, unique=True, verbose_name='Sipariş Numarası')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Siparişin toplam tutarı (indirimler uygulandıktan sonra).', max_digits=10, verbose_name='Toplam Tutar')),
                ('status', models.CharField(default='pending', help_text='Siparişin güncel durumu: pending, paid, shipped, failed, refunded vb.', max_length=50, verbose_name='Durum')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Ödeme anında kullanıcının IP adresi', null=True, verbose_name='Müşteri IP Adresi')),
                ('pos_response_code', models.CharField(blank=True, help_text='Sanal pos tarafından dönen cevap kodu.', max_length=50, null=True, verbose_name='POS Cevap Kodu')),
                ('pos_response_message', models.TextField(blank=True, help_text='Sanal pos hata veya başarı mesajı.', null=True, verbose_name='POS Mesajı')),
                ('transaction_id', models.CharField(blank=True, help_text="Sanal pos tarafından atanan işlem ID'si", max_length=255, null=True, verbose_name='İşlem ID')),
                ('currency', models.ForeignKey(blank=True, help_text='Siparişin nihai fiyatlandırmasının yapıldığı para birimi.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Para Birimi')),
                ('user', models.ForeignKey(help_text='Siparişi veren kullanıcı', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Sipariş',
                'verbose_name_plural': 'Siparişler',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(help_text='Benzersiz fatura numarası.', max_length=100, unique=True, verbose_name='Fatura Numarası')),
                ('invoice_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Faturanın düzenlenme tarihi.', verbose_name='Fatura Tarihi')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Fatura Toplam Tutarı')),
                ('is_efatura', models.BooleanField(default=False, help_text='Eğer bu bir e-fatura ise işaretleyin.', verbose_name='E-Fatura')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Para Birimi')),
                ('user', models.ForeignKey(help_text='Bu faturanın kesildiği kullanıcı.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
                ('invoice_address', models.ForeignKey(blank=True, help_text='Faturanın kesildiği adres.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.invoiceaddress', verbose_name='Fatura Adresi')),
                ('order', models.ForeignKey(help_text='Bu fatura hangi siparişi temsil ediyor?', on_delete=django.db.models.deletion.CASCADE, to='soloaccounting.order', verbose_name='Sipariş')),
            ],
            options={
                'verbose_name': 'Fatura',
                'verbose_name_plural': 'Faturalar',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.PositiveIntegerField(help_text='Sipariş verildiği andaki ürün ID. Ürün değişse bile bu ID sabit kalır.', verbose_name='Ürün ID')),
                ('product_name', models.CharField(help_text='Sipariş verildiği andaki ürün adı.', max_length=255, verbose_name='Ürün Adı')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Sipariş anındaki birim fiyat. Ürün fiyatı daha sonra değişse bile bu sabit kalır.', max_digits=10, verbose_name='Birim Fiyat')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Siparişteki ürün adedi.', verbose_name='Miktar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='soloaccounting.order', verbose_name='Sipariş')),
            ],
            options={
                'verbose_name': 'Sipariş Ürünü',
                'verbose_name_plural': 'Sipariş Ürünleri',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ürün adını belirtiniz.', max_length=255, unique=True, verbose_name='Ürün Adı')),
                ('slug', models.SlugField(blank=True, help_text="Ürünün URL'de kullanılacak kısa adı. Otomatik oluşturulur.", max_length=255, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, help_text='Ürün ile ilgili açıklama.', null=True, verbose_name='Ürün Açıklaması')),
                ('serviceDuration', models.PositiveIntegerField(help_text='Hizmet süresi ay cinsinden belirtilmelidir.', verbose_name='Hizmet Süresi (Ay)')),
                ('price', models.DecimalField(decimal_places=2, help_text='Ürün fiyatını belirtiniz.', max_digits=10, verbose_name='Ürün Fiyatı')),
                ('isActive', models.BooleanField(default=True, help_text='Ürünün aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('createDate', models.DateTimeField(auto_now_add=True, help_text='Bu kaydın oluşturulma tarihi otomatik olarak ayarlanır.', verbose_name='Oluşturulma Tarihi')),
                ('updateDate', models.DateTimeField(auto_now=True, help_text='Bu kaydın son güncellenme tarihi otomatik olarak ayarlanır.', verbose_name='Güncellenme Tarihi')),
                ('category', models.ForeignKey(blank=True, default=None, help_text='Bu ürünü ait olduğu kategoriye atayınız.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='soloaccounting.category', verbose_name='Kategori')),
                ('currency', models.ForeignKey(blank=True, default=1, help_text='Ürün fiyatının belirtildiği para birimi. Boş bırakılırsa varsayılan para birimi kullanılır.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Para Birimi')),
            ],
            options={
                'verbose_name': 'Ürün',
                'verbose_name_plural': 'Ürünler',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('icon', models.CharField(blank=True, help_text="Iconify ikon adı. Örn: 'material-symbols:shopping-cart'", max_length=100, null=True)),
                ('caption', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Menü sıralaması')),
                ('roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, help_text="Bu menüye erişimi olan roller listesi. Örn: ['admin', 'manager']", null=True, size=None)),
                ('info', models.CharField(blank=True, default=None, help_text='Menü öğesi için bilgi (örneğin bir etiket)', max_length=255, null=True)),
                ('disabled', models.BooleanField(default=False, help_text='Menü öğesinin devre dışı olup olmadığını belirtir')),
                ('external', models.BooleanField(default=False, help_text='Harici bir bağlantı olup olmadığını belirtir')),
                ('is_superuser_only', models.BooleanField(default=False, help_text='Bu menü yalnızca superuser tarafından görülebilir.')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='soloaccounting.menu')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='soloaccounting.product')),
            ],
            options={
                'verbose_name': 'Menü Öğesi',
                'verbose_name_plural': 'Menü Öğeleri',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='products',
            field=models.ManyToManyField(blank=True, to='soloaccounting.product', verbose_name='Geçerli Ürünler'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Miktar')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Ürünün sepete eklendiği andaki birim fiyatı.', max_digits=10, verbose_name='Birim Fiyat')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='soloaccounting.cart', verbose_name='Sepet')),
                ('line_currency', models.ForeignKey(blank=True, help_text='Bu satırın para birimi. Ürün eklendiğinde product.currency alınarak set edilebilir.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.currency', verbose_name='Ürün Satır Para Birimi')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soloaccounting.product', verbose_name='Ürün')),
            ],
            options={
                'verbose_name': 'Sepet Ürünü',
                'verbose_name_plural': 'Sepet Ürünleri',
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='campaigns', to='soloaccounting.product', verbose_name='Ürünler'),
        ),
        migrations.CreateModel(
            name='SiteUrun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='urunSite', to='sites.site', verbose_name='Site')),
                ('urun', models.ManyToManyField(related_name='siteUrun', to='soloaccounting.product', verbose_name='Ürünler')),
            ],
            options={
                'verbose_name': 'Site Ürün Eşleşmesi',
                'verbose_name_plural': 'Site Ürün Eşleşmeleri',
            },
        ),
        migrations.CreateModel(
            name='SqlServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Oluşturulma tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, help_text='Son güncelleme tarihi')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain')),
                ('ns1', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS1')),
                ('ns2', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS2')),
                ('ipAddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 1')),
                ('ipAddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 2')),
                ('ipAddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 3')),
                ('ipAddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 4')),
                ('ipAddress5', models.GenericIPAddressField(blank=True, null=True, verbose_name='SQL Sunucusu IP 5')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şifre')),
                ('paymentType', models.CharField(choices=[('Monthly', 'Aylık'), ('Yearly', 'Yıllık')], default='Monthly', max_length=10, verbose_name='Ödeme Tipi')),
                ('priceUsd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret (USD)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('isActive', models.BooleanField(default=True, help_text='Sunucunun aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu sunucunun varsayılan olup olmadığını belirtir.', verbose_name='Varsayılan')),
                ('operatingSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.operatingsystem', verbose_name='İşletim Sistemi')),
                ('site', models.ForeignKey(help_text='Bu kaydın ait olduğu siteyi belirtir.', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='sites.site')),
            ],
            options={
                'verbose_name': 'S-SQL Sunucusu',
                'verbose_name_plural': 'S-SQL Sunucuları',
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='user_segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.usersegment', verbose_name='Kullanıcı Segmenti'),
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('params', models.JSONField(blank=True, default=dict, verbose_name='Koşul Parametreleri')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='soloaccounting.campaign', verbose_name='Kampanya')),
                ('condition_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conditions', to='soloaccounting.conditiontype', verbose_name='Koşul Tipi')),
                ('dealer_segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.dealersegment', verbose_name='Bayi Segmenti')),
                ('user_segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.usersegment', verbose_name='Kullanıcı Segmenti')),
            ],
            options={
                'verbose_name': 'Koşul',
                'verbose_name_plural': 'Koşullar',
            },
        ),
        migrations.CreateModel(
            name='UserSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Oluşturulma tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, help_text='Son güncelleme tarihi')),
                ('site', models.ForeignKey(help_text='Bu kaydın ait olduğu siteyi belirtir.', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='sites.site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userSites', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı-Site İlişkisi',
                'verbose_name_plural': 'Kullanıcı-Site İlişkileri',
            },
        ),
        migrations.CreateModel(
            name='WebServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Oluşturulma tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, help_text='Son güncelleme tarihi')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Domain')),
                ('ns1', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS1')),
                ('ns2', models.CharField(blank=True, max_length=255, null=True, verbose_name='NS2')),
                ('ipAddress1', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 1')),
                ('ipAddress2', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 2')),
                ('ipAddress3', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 3')),
                ('ipAddress4', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 4')),
                ('ipAddress5', models.GenericIPAddressField(blank=True, null=True, verbose_name='Web Sunucusu IP 5')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Şifre')),
                ('paymentType', models.CharField(choices=[('Monthly', 'Aylık'), ('Yearly', 'Yıllık')], default='Monthly', max_length=10, verbose_name='Ödeme Tipi')),
                ('priceUsd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret (USD)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('isActive', models.BooleanField(default=True, help_text='Sunucunun aktif/pasif durumunu belirtir.', verbose_name='Aktif')),
                ('isDefault', models.BooleanField(default=False, help_text='Bu sunucunun varsayılan olup olmadığını belirtir.', verbose_name='Varsayılan')),
                ('operatingSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soloaccounting.operatingsystem', verbose_name='İşletim Sistemi')),
                ('site', models.ForeignKey(help_text='Bu kaydın ait olduğu siteyi belirtir.', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='sites.site')),
            ],
            options={
                'verbose_name': 'S-Web Sunucusu',
                'verbose_name_plural': 'S-Web Sunucuları',
            },
        ),
        migrations.CreateModel(
            name='CustomSiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Oluşturulma tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, help_text='Son güncelleme tarihi')),
                ('site', models.ForeignKey(help_text='Bu kaydın ait olduğu siteyi belirtir.', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='sites.site')),
                ('dnsServer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dnsserver_configurations', to='soloaccounting.dnsserver', verbose_name='DNS Server')),
                ('mailServer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mailserver_configurations', to='soloaccounting.mailserver', verbose_name='Mail Server')),
                ('sqlServer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sqlserver_configurations', to='soloaccounting.sqlserver', verbose_name='SQL Server')),
                ('webServer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webserver_configurations', to='soloaccounting.webserver', verbose_name='Web Server')),
            ],
            options={
                'verbose_name': 'Site Konfigürasyonu',
                'verbose_name_plural': 'Site Konfigürasyonları',
            },
        ),
    ]
